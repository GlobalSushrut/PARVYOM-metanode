name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  rust-test:
    name: Rust Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --workspace --all-targets -- -D warnings
    
    - name: Run tests
      run: cargo test --workspace --verbose
    
    - name: Run benchmarks (dry run)
      run: cargo bench --workspace --no-run

  typescript-test:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install pnpm
      run: npm install -g pnpm@8.12.0
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Type check
      run: pnpm typecheck
    
    - name: Lint
      run: pnpm lint
    
    - name: Format check
      run: pnpm format --check
    
    - name: Run tests
      run: pnpm test

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit
    
    - name: Install pnpm
      run: npm install -g pnpm@8.12.0
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run npm audit
      run: pnpm audit

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [rust-test, typescript-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install pnpm
      run: npm install -g pnpm@8.12.0
    
    - name: Build Rust workspace
      run: cargo build --workspace --release
    
    - name: Install TS dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build TypeScript packages
      run: pnpm build
    
    - name: Run integration tests
      run: |
        # Stage 1 Test: Verify build artifacts exist
        test -f target/release/bpi || (echo "bpi binary not found" && exit 1)
        test -f target/release/lc-verify || (echo "lc-verify binary not found" && exit 1)
        echo "âœ… Stage 1.2 Test: Build artifacts verified"
